import numpy as np
import matplotlib.pyplot as plt

l = 300
R = 403/2
I_sq = 13653.3
I_rd = 12318.8
E = 2 * 10**(5)

F_up = np.array(np.arange(10, 110, 10))
print(F_up)
F_down = np.array(np.arange(100, 0, -10))

s_1a_up = np.array([0, 0.2, 1.6, 3, 4.4, 6, 8.8, 11.1, 12.9, 14.2])
s_1a_down = np.array([14.2, 13.6, 11.8, 10.2, 8.5, 6.7, 5.2, 3.9, 2.7, 1])

s_2a_up = np.array([0.6, 1.2, 2.1, 3.2, 3.9, 4.9, 6.6, 7.6, 8.9, 9.8])
s_2a_down = np.array([9.8, 9.4, 8.2, 7.4, 6.5, 5.5, 4.6, 3.9, 2.9, 1.7])

s_3a_up = np.array([0, 0.1, 0.8, 1.5, 2, 2.9, 4, 5.2, 6, 6.6])
s_3a_down = np.array([6.6, 6.1, 5.2, 4.3, 3.6, 2.8, 2.1, 1.4, 1.1, 0.3])

s_1b_up = np.array([0.7, 6.2, 13.2, 15.3, 17.6, 20, 21.5, 26.1, 29.1, 31.6]) / 10
s_1b_down = np.array([31.6, 28, 23.8, 21.8, 20.5, 18.8, 16.8, 15, 12.4, 10.2])

s_2b_up = np.array([0, 0.8, 1.7, 2.7, 3.5, 4.8, 5.3, 7.6, 8.9, 10.1])
s_2b_down = np.array([10.1, 8.6, 6.8, 5.7, 5.2, 4.5, 3.7, 3.3, 3.3, 3.3])

s_3b_up = np.array([0.1, 1, 1.7, 2.4, 3.4, 4.3, 4.7, 6.9, 8.1, 9.2])
s_3b_down = np.array([9.2, 7.2, 5, 4.3, 3.8, 2.7, 1.9, 0.9, 0, 0])

dx_sq_up = (F_up * l**3) / (24 * E * I_sq)
print("Теория квадрат поперек up: ", *dx_sq_up)
print("Эксперимент квадрат поперек up: ", *(s_2a_up + s_3a_up))
print('------------------------------------------------------')
print("Теория квадрат вдоль up: ", *(dx_sq_up/2))
print("Эксперимент квадрат вдоль up: ", *(s_1a_up))
print()
print('=======================================================')
print()
dx_sq_down = (F_down * l**3) / (24 * E * I_sq)
print("Теория квадрат поперек down: ", *dx_sq_down)
print("Эксперимент квадрат поперек down: ", *(s_2a_down + s_3a_down))
print('------------------------------------------------------')
print("Теория квадрат вдоль down: ", *dx_sq_down)
print("Эксперимент квадрат вдоль dowm: ", *(s_1a_down))
print()
print('=======================================================')

dx_rd_up = (F_up * R**3) * (2/np.pi - 0.5) / (E * I_rd)
dy_rd_up = (F_up * R**3) * (np.pi**2 - 8) / (4 * E * I_rd * np.pi)
print("Теория кольцо поперек up: ", *dx_rd_up)
print("Эксперимент кольцо поперек up: ", *(s_2b_up + s_3b_up))
print('------------------------------------------------------')
print("Теория кольцо вдоль up: ", *(dy_rd_up/2))
print("Эксперимент кольцо вдоль up: ", *(s_1b_up))
print()
print('=======================================================')
print()
dx_rd_down = (F_down * R**3) * (2/np.pi - 0.5) / (E * I_rd)
dy_rd_down = (F_down * R**3) * (np.pi**2 - 8) / (4 * E * I_rd * np.pi)
print("Теория кольцо поперек down: ", *dx_rd_down)
print("Эксперимент кольцо поперек down: ", *(s_2b_down + s_3b_down))
print('------------------------------------------------------')
print("Теория кольцо down: ", *(dx_rd_down/2))
print("Эксперимент кольцо вдоль dowm: ", *(s_1b_down))
print()
print('=======================================================')

fig, axs = plt.subplots(2, 2, figsize=(15, 10))

t_s_1a_up = np.polyfit(s_1a_up, F_up,  1)
f_s_1a_up = np.poly1d(t_s_1a_up)
print(f_s_1a_up)


t_s_2a_up = np.polyfit(s_2a_up, F_up,  1)
f_s_2a_up = np.poly1d(t_s_2a_up)

t_s_3a_up = np.polyfit(s_3a_up, F_up,  1)
f_s_3a_up = np.poly1d(t_s_3a_up)

axs[0, 0].scatter(s_1a_up, F_up, marker = 'o')
axs[0, 0].plot(s_1a_up, f_s_1a_up(s_1a_up), label='1a_up')
axs[0, 0].scatter(s_2a_up, F_up, marker = 'D')
axs[0, 0].plot(s_2a_up, f_s_2a_up(s_2a_up), label='2a_up')
axs[0, 0].scatter(s_3a_up, F_up, marker = '<')
axs[0, 0].plot(s_3a_up, f_s_3a_up(s_3a_up), label='3a_up')
axs[0, 0].legend()
axs[0, 0].grid(True)
axs[0, 0].grid(which='both', color='gray', linestyle='--', linewidth=0.5)
axs[0, 0].minorticks_on()
axs[0, 0].grid(which='minor', color='lightgray', linestyle=':', linewidth=0.5)
axs[0, 0].set_title('Квадрат - увеличение нагрузки', fontweight='bold', fontsize=14)
axs[0, 0].set_xlabel('F, Н')
axs[0, 0].set_ylabel('dS, мм')

t_s_1a_down = np.polyfit(s_1a_down, F_down,  1)
f_s_1a_down = np.poly1d(t_s_1a_down)
t_s_2a_down = np.polyfit(s_2a_down, F_down,  1)
f_s_2a_down = np.poly1d(t_s_2a_down)
t_s_3a_down = np.polyfit(s_3a_down, F_down,  1)
f_s_3a_down = np.poly1d(t_s_3a_down)

axs[0, 1].scatter(s_1a_down, F_down, marker = 'o')
axs[0, 1].plot(s_1a_down, f_s_1a_down(s_1a_down), label='1a_down')
axs[0, 1].scatter(s_2a_down, F_down, marker = 'D')
axs[0, 1].plot(s_2a_down, f_s_2a_down(s_2a_down), label='2a_down')
axs[0, 1].scatter(s_3a_down, F_down, marker = '<')
axs[0, 1].plot(s_3a_down, f_s_3a_down(s_3a_down), label='3a_down')
axs[0, 1].legend()
axs[0, 1].grid(True)
axs[0, 1].grid(which='both', color='gray', linestyle='--', linewidth=0.5)
axs[0, 1].minorticks_on()
axs[0, 1].grid(which='minor', color='lightgray', linestyle=':', linewidth=0.5)
axs[0, 1].set_title('Квадрат - уменьшение нагрузки', fontweight='bold', fontsize=14)
axs[0, 1].set_xlabel('F, Н')
axs[0, 1].set_ylabel('dS, мм')

t_s_1b_up = np.polyfit(s_1b_up, F_up,  1)
f_s_1b_up = np.poly1d(t_s_1b_up)
print(f_s_1b_up)

t_s_2b_up = np.polyfit(s_2b_up, F_up,  1)
f_s_2b_up = np.poly1d(t_s_2b_up)
t_s_3b_up = np.polyfit(s_3b_up, F_up,  1)
f_s_3b_up = np.poly1d(t_s_3b_up)

axs[1, 0].scatter(s_1b_up, F_up, marker = 'o')
axs[1, 0].plot(s_1b_up, f_s_1b_up(s_1b_up), label='1b_up')
axs[1, 0].scatter(s_2b_up, F_up, marker = 'D')
axs[1, 0].plot(s_2b_up, f_s_2b_up(s_2b_up), label='2b_up')
axs[1, 0].scatter(s_3b_up, F_up, marker = '<')
axs[1, 0].plot(s_3b_up, f_s_3b_up(s_3b_up), label='3b_up')
axs[1, 0].legend()
axs[1, 0].grid()
axs[1, 0].grid(True)
axs[1, 0].grid(which='both', color='gray', linestyle='--', linewidth=0.5)
axs[1, 0].minorticks_on()
axs[1, 0].grid(which='minor', color='lightgray', linestyle=':', linewidth=0.5)
axs[1, 0].set_title('Кольцо - увеличение нагрузки', fontweight='bold', fontsize=14)
axs[1, 0].set_xlabel('F, Н')
axs[1, 0].set_ylabel('dS, мм')

t_s_1b_down = np.polyfit(s_1b_down, F_down,  1)
f_s_1b_down = np.poly1d(t_s_1b_down)
t_s_2b_down = np.polyfit(s_2b_down, F_down,  1)
f_s_2b_down = np.poly1d(t_s_2b_down)
t_s_3b_down = np.polyfit(s_3b_down, F_down,  1)
f_s_3b_down = np.poly1d(t_s_3b_down)

axs[1, 1].scatter(s_1b_down, F_down, marker = 'o')
axs[1, 1].plot(s_1b_down, f_s_1b_down(s_1b_down), label='1b_down')
axs[1, 1].scatter(s_2b_down, F_down, marker = 'D')
axs[1, 1].plot(s_2b_down, f_s_2b_down(s_2b_down), label='2b_down')
axs[1, 1].scatter(s_3b_down, F_down, marker = '<')
axs[1, 1].plot(s_3b_down, f_s_3b_down(s_3b_down), label='3b_down')
axs[1, 1].legend()
axs[1, 1].grid(True)
axs[1, 1].grid(which='both', color='gray', linestyle='--', linewidth=0.5)
axs[1, 1].minorticks_on()
axs[1, 1].grid(which='minor', color='lightgray', linestyle=':', linewidth=0.5)
axs[1, 1].set_title('Кольцо - уменьшение нагрузки', fontweight='bold', fontsize=14)
axs[1, 1].set_xlabel('F, Н')
axs[1, 1].set_ylabel('dS, мм')

plt.savefig('Графики', dpi=300)
plt.show()